import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    static int[] circularArrayRotation(int[] a, int[] m, int k) {
    	Queue<Integer> queue = new LinkedList<Integer>();
    	int[] array = new int[m.length];
    	for (int i = a.length-1; i >= 0; i--) {
    		queue.add(a[i]);
		}
    	for (int i = 0; i < k; i++) {
			int ele = queue.remove();
			queue.add(ele);
		}
    	
    	for (int i = a.length-1; i >= 0; i--) {
			a[i] = queue.remove();
		}
    	for (int i = 0; i < m.length; i++) {
			array[i] = a[m[i]];
		}
    	
		return array;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int k = in.nextInt();
        int q = in.nextInt();
        int[] a = new int[n];
        for(int a_i = 0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] m = new int[q];
        for(int m_i = 0; m_i < q; m_i++){
            m[m_i] = in.nextInt();
        }
        int[] result = circularArrayRotation(a, m, k);
        for (int i = 0; i < result.length; i++) {
            System.out.print(result[i] + (i != result.length - 1 ? "\n" : ""));
        }
        System.out.println("");


        in.close();
    }
}
